ОШИБКИ!!!
При ошибке - 'npm' is not recognized as internal or external command, operable program or batch file            <<<---Скачать node.js      (https://nodejs.org/en/download)
При ошибке - pip: The term 'pip' is not recognized as a name of a cmdlet, function, script file, or executable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.        <<<--- Скачать python    (https://www.python.org/downloads/
При ошибке - git: The term 'git' is not recognized as a name of a cmdlet, function, script file, or executable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.   <<<---Скачать git  (https://git-scm.com/download/win)
При ошибке - ModuleNotFoundError: No module named 'playwright'  <<<---    pip install playwright


ПОЛЕЗНОЕ!!!
Расширение Fake Filler.
Расширение Web Deweloper.
Расширение Postman Interceptor.
Рандомные Дата файлы (для генерации csv файлов для постмана) - Mockaroo.
Fiddler classic (ewerywhere) - сниффер трафика и подмена запросов.
На ios:
После скачки файла:
1. VPN и управление устройством.
2. Об этом устройстве -> Доверие сертификатам.

Скрипт для сохранения переменной:
var xsrfCookie = postman.getResponseCookie("csrftoken");
postman.setEnvironmentVariable('csrftoken', xsrfCookie.value);

Пререквест
    pm.request.headers.add({
        key: "Cookie",
        value: "{{Cookie}}"
        });


const Cookie = require('postman-collection').Cookie;

const oResponseHeaders = pm.response.headers;
oResponseHeaders.filter(function(resHeader){
    //console.log("resHeader : ",resHeader);
    
    let bSetCookieExists = resHeader.key.includes("Set-Cookie");
    if(bSetCookieExists){
        console.log('cookie : ',resHeader.key.includes("Set-Cookie"));
        
        let  rawHeader = pm.response.headers.get("Set-Cookie");
        let myCookie = new Cookie(rawHeader);
        console.log("myCookie : ",myCookie.toJSON());
        console.log("myCookie name : ", myCookie.name);
        console.log("myCookie value : ", myCookie.value);
      
    }
    

})
pm.response.headers.get('Set-Cookie').
  split('; ').find(s=>s.startsWith('myCookieName='))?.split('=')[1]




Добавляется в Тесты:
// Fix SyntaxError: missing ) after argument list
const cookieJar = pm.cookies.jar();
// create a cookie
cookieJar.set("https://fix-sso.sbis.ru", "cookie name", "cookie value", function(error, cookie) {
  // callback function
});
// get the created cookies
cookieJar.getAll("https://fix-sso.sbis.ru", function (error, cookies) { });



GIT - распределённая система управления версиями.
git init
git remote add origin https://github.com/Nickname/my-project.git      <<<---Заместо origin может быть любое название ветки
git remote -v    <<<---Проверка подключения
git remote remove origin    <<<---Удаление подключения
git clone https://github.com/Nickname/my-project.git   <<<---Setting в Гите <<<---Delevoper Setting <<<---Personal access tokens <<<---Generate new token <<<---Поставить галочку на REPO - ПАРОЛЬ ОТ ГИТА! при клонировании
Не забыть провалиться в папку проекта!!!
git config --global user.email Mickey-sc@yandex.ru
git config --global user.name "Artem"





PLAYWRIGHT — это библиотека автоматизации.
pip install playwright
pip install pytest-playwright
playwright install
npx playwright codegen - вызов записи шагов.
PYTEST - это среда тестирования, основанная на Python (важное правило - НАЗВАНИЕ ФАЙЛА СОДЕРЖИТ СЛОВО - test) (Пример - test_Run) (Каждый тест содержит - test) (Пример - def test_game_training) 
pytest -s -v tests/"название.py"

REQUESTS - библиотека запросов
pip install requests


PYLINT - линтер
pip install pylint
pylint "местоположение\название.py"

Allure
pip install allure-pytest
npm install -g allure-commandline --save-dev
mkdir allure-report
pytest -s -v tests/response.py --alluredir=allure-report
npx allure serve allure-report          <<< - Вызов HTML
allure generate allure-report ЕСЛИ ОШИБКА, ТО ВНАЧАЛЕ npx
allure serve allure-report ЕСЛИ ОШИБКА, ТО ВНАЧАЛЕ npx
allure generate --clean   ЕСЛИ ОШИБКА, ТО ВНАЧАЛЕ npx
python -m pytest tests/test_login_fixture.py --alluredir=allure-report                   (Если не работают обычные вызовы)
pytest my-project/tests/ --numprocesses auto --alluredir=allure-report                   (параллельный запуск тестов)
python -m pytest my-project/tests/B_B_GAME/TRAINING/test_Guests.py --dist=each --tx=3*popen   (запуск теста N количество итераций)

NEWMAN - прогон тестов Postman.
npm install -g newman
npm install -g npm@9.8.1 (возможно потребуется)
Скрипт:
Set-ExecutionPolicy -ExecutionPolicy Unrestricted             -> A
.\choco-install.ps1

HTMLEXTRA - составление html отчетов о тесте.
npm i newman-reporter-htmlextra
npm install -g newman-reporter-html
newman run Perehvat.postman_collection.json -e ePerehvat.postman_collection.json -r htmlextra -d (дальше дата файл)




Важные марки:
@pytest.mark.owner
@allure.title
@allure.link
@allure.epic
@allure.feature
@allure.story
@allure.description

Фикстуры:
@pytest.fixture(scope="session")
def login_logout_SABY(playwright: Playwright):
    browser = playwright.chromium.launch(headless= False)
    context = browser.new_context()
    context.add_cookies(ForTest.ХХХ)
    page = context.new_page()
    # print(context.cookies())
    yield page
    page.close()
    browser.close()


@pytest.mark.parametrize("a, b", [("qq@qq.qq", "1111"),
                                  ("www@www.ww", "1111")
                                  ])
def test_game_training(login_logout_game, a, b):
    page = login_logout_game
    page.goto("www")
    page.get_by_label("E-mail").fill(a)
    page.get_by_label("Пароль").fill(b)




pip install mitmproxy2swagger
https://mitmproxy.org/
